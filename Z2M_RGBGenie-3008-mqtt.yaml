blueprint:
  name: Z2M - RGBGenie 3008 via MQTT
  description: |
    Control the RGBGenie ZB-3008/ZB-3009 remotes with MQTT (via Zigbee2MQTT).
    Работает напрямую с топиком MQTT.
  domain: automation
  input:
    mqtt_topic:
      name: "MQTT Topic"
      description: "Укажи топик MQTT, например: zigbee2mqtt/ZB-3009/action"
      selector:
        text:
    light_1:
      name: "Light 1"
      selector:
        entity:
          domain: light
    light_2:
      name: "Light 2"
      selector:
        entity:
          domain: light
    light_3:
      name: "Light 3"
      selector:
        entity:
          domain: light
    force_brightness:
      name: "Force turn on brightness"
      default: false
      selector:
        boolean:
    brightness:
      name: "Brightness"
      default: 50
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    min_brightness:
      name: "Minimum Brightness"
      default: 1
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    button_power:
      name: "Power Button Action"
      default: []
      selector:
        action: {}
    button_white_short:
      name: "White Button Short Press"
      default: []
      selector:
        action: {}
    button_white_long:
      name: "White Button Long Press"
      default: []
      selector:
        action: {}
    button_play:
      name: "Play Button Press"
      default: []
      selector:
        action: {}
    color_add_steps:
      name: "Additional Color Steps"
      default: []
      selector:
        action: {}

mode: single
max_exceeded: silent

trigger:
  - platform: mqtt
    topic: !input mqtt_topic

variables:
  force_brightness: !input "force_brightness"
  brightness: !input "brightness"
  min_brightness: !input "min_brightness"
  light_1: !input "light_1"
  light_2: !input "light_2"
  light_3: !input "light_3"

action:
  - variables:
      payload: "{{ trigger.payload | from_json }}"
      command: "{{ payload.command }}"
      endpoint_id: "{{ payload.endpoint }}"
      light_entity: >-
        {% if endpoint_id == 1 %}
          {{ light_1 }}
        {% elif endpoint_id == 2 %}
          {{ light_2 }}
        {% else %}
          {{ light_3 }}
        {% endif %}
  - choose:
      - conditions: '{{ command in ["on", "off"] }}'
        sequence: !input "button_power"
      - conditions: '{{ command == "color_move" }}'
        sequence:
          - service: light.turn_on
            data:
              entity_id: "{{ light_entity }}"
              xy_color:
                - "{{ payload.action_color.x / 65535 }}"
                - "{{ payload.action_color.y / 65535 }}"
          - choose:
              - conditions: "{{ true }}"
                sequence: !input "color_add_steps"
      - conditions: '{{ command in ["brightness_move_up", "brightness_move_down"] }}'
        sequence:
          - repeat:
              count: 15
              sequence:
                - choose:
                    - conditions: '{{ command == "brightness_move_up" }}'
                      sequence:
                        - service: light.turn_on
                          data:
                            entity_id: "{{ light_entity }}"
                            brightness_step_pct: 10
                            transition: 1
                    - conditions: '{{ command == "brightness_move_down" }}'
                      sequence:
                        - service: light.turn_on
                          data:
                            entity_id: "{{ light_entity }}"
                            brightness_step_pct: -10
                            transition: 1
      - conditions: '{{ command == "white_short" }}'
        sequence: !input "button_white_short"
      - conditions: '{{ command == "white_long" }}'
        sequence: !input "button_white_long"
      - conditions: '{{ command == "play" }}'
        sequence: !input "button_play"
